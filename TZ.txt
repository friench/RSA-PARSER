написать многофункциональную программу для скоростного парсинга с решением капчи на антикапче 2х сайтов:
1) https://dkbm-web.autoins.ru/dkbm-web-1.0/policy.htm?vin=
2) https://dkbm-web.autoins.ru/dkbm-web-1.0/bsostate.htm?bsoseries=&bsonumber=

1 часть (сайт https://dkbm-web.autoins.ru/dkbm-web-1.0/policy.htm?vin=)
input: 
1)xls, xlsx файл (местоположение)
2)позиция вин кода (причем человек указывает английскую букву, ее нужно преобразовать в число (скрипт converter.py предоставлю)
3)plus_time - на сколько увеличить (позже укажу конкретнее)
4)minus_time - на сколько уменьшить (позже укажу конкретнее)
5)режим (1 - полная проверка всего, 2 - проверка только первого этапа, 3 - проверка 1 этапа у всех и второго у тех, у кого на первом этапе в первый раз ничего не нашло, а во второй раз нашло)

Что за на сколько увеличить и уменьшить?
Изначально скрипт выполняется с такой датой: 
1 этап: текущий день + plus_time =(если ничего не нашел)> текущий день + plus_time - minus_time (если ничего снова не нашел то выходим)

output:
вывести в xls or xlsx таблицу следущие данные:
название столбцов по порядку.
1)Номер договора ОСАГО
2)Серия договора ОСАГО
3)Страховая компания
4)Дата заключения договора
5)Дата начала начала действия договора
6)Дата окончания действия договора
7)Статус договора ОСАГО
8)Ограничение лиц допущенных к управлению ТС

То есть на первой строчке вы должны в любом случае выводить данные 8 названий,
а уже под ними писать значения для предоставленных вин кодов (можете скопипастить с той проги многое).


2 часть (сайт https://dkbm-web.autoins.ru/dkbm-web-1.0/bsostate.htm?bsoseries=&bsonumber=)
input:
все данные идут с 1 части
(нужно номер полиса и серия)
output:
Выводить то же самое что и в первом этапе (так как в первом этапе мы не найдем многих данных

Бизнес логика:
получение данных
 	|
      этап 1(получаем ответ капчи через антикапчу, получаем ответ) - ответ отрицательный, ищем при now_time + plus_time- minus_time, если и дальше отрицательный, то пишем '-'
	|
   если ответ положительный - если режим 2 или 3(если мы зашли при дате now_time + plus_time) - завершаем и пишем '-'
	|
      этап 2(если режим 1 или режим 3(при дате now_time + plus_time - minus_time) - если не получили на 2 этапе и data = now_time + plus_time- minus_time - выходим с минусами в не найденных ячейках, если data = now_time + plus_time - отправляемся на 1 этап) 
        |
     если получили - выходим
	|
      вывод